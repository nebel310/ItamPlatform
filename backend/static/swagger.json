{
  "openapi": "3.0.3",
  "info": {
    "title": "ITAM API",
    "version": "1.0.0",
    "description": "API for managing events, categories, tags, and users."
  },
  "servers": [
    {
      "url": "http://localhost:5001"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/get_users": {
      "get": {
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/update_user/{user_id}": {
      "put": {
        "summary": "Update a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/delete_user/{user_id}": {
      "delete": {
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/events/get_events": {
      "get": {
        "summary": "Get all events",
        "responses": {
          "200": {
            "description": "A list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/create_event": {
      "post": {
        "summary": "Create a new event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/update_event/{event_id}": {
      "put": {
        "summary": "Update an event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully"
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/delete_event/{event_id}": {
      "delete": {
        "summary": "Delete an event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted successfully"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    },
    "/api/events/upload_file/{event_id}": {
      "post": {
        "summary": "Upload a file for an event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_name": {"type": "string"},
                  "file_data": {"type": "string"},
                  "file_type": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully"
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/delete_file/{file_id}": {
      "delete": {
        "summary": "Delete a file",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully"
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    },
    "/api/events/get_categories": {
      "get": {
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "A list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/create_category": {
      "post": {
        "summary": "Create a new category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/update_category/{category_id}": {
      "put": {
        "summary": "Update a category",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/delete_category/{category_id}": {
      "delete": {
        "summary": "Delete a category",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/get_tags": {
      "get": {
        "summary": "Get all tags",
        "responses": {
          "200": {
            "description": "A list of tags",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/create_tag": {
      "post": {
        "summary": "Create a new tag",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tag created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/update_tag/{tag_id}": {
      "put": {
        "summary": "Update a tag",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Tag not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/delete_tag/{tag_id}": {
      "delete": {
        "summary": "Delete a tag",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted successfully"
          },
          "404": {
            "description": "Tag not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events/register_event/{event_id}/{user_id}": {
      "post": {
        "summary": "Register a user for an event",
        "description": "Registers a user for an event. If the participant limit is reached, the user is added to the waitlist.",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "200": {
            "description": "User added to the waitlist"
          },
          "404": {
            "description": "Event not found"
          },
          "400": {
            "description": "Event is cancelled"
          }
        }
      }
    },
    "/api/events/unregister_event/{event_id}/{user_id}": {
      "delete": {
        "summary": "Unregister a user from an event",
        "description": "Unregisters a user from an event. If there is a waitlist, the first user in the waitlist is automatically registered.",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User unregistered successfully"
          },
          "404": {
            "description": "User not registered for the event"
          }
        }
      }
    },
    "/api/events/cancel_event/{event_id}": {
      "put": {
        "summary": "Cancel an event",
        "description": "Marks an event as cancelled without deleting it.",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event cancelled successfully"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "username": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "hpsw": {"type": "string"},
          "is_admin": {"type": "integer"},
          "time": {"type": "string", "format": "date-time"}
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "username": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "password": {"type": "string"}
        },
        "required": ["username", "email", "password"]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "username": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "password": {"type": "string"},
          "is_admin": {"type": "integer"}
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {"type": "string", "format": "email"},
          "password": {"type": "string"}
        },
        "required": ["email", "password"]
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "event_name": {"type": "string"},
          "description": {"type": "string"},
          "start_datetime": {"type": "string", "format": "date-time"},
          "end_datetime": {"type": "string", "format": "date-time"},
          "location": {"type": "string"},
          "event_type": {"type": "string"},
          "participant_limit": {"type": "integer"},
          "category": {"type": "string"},
          "tags": {
            "type": "array",
            "items": {"type": "string"}
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_name": {"type": "string"},
                "file_type": {"type": "string"}
              }
            }
          }
        }
      },
      "EventInput": {
        "type": "object",
        "properties": {
          "event_name": {"type": "string"},
          "description": {"type": "string"},
          "start_datetime": {"type": "string", "format": "date-time"},
          "end_datetime": {"type": "string", "format": "date-time"},
          "location": {"type": "string"},
          "event_type": {"type": "string"},
          "participant_limit": {"type": "integer"},
          "category": {"type": "string"},
          "tags": {
            "type": "array",
            "items": {"type": "string"}
          }
        },
        "required": ["event_name", "description", "start_datetime", "end_datetime", "location", "event_type", "participant_limit", "category"]
      },
      "EventUpdate": {
        "type": "object",
        "properties": {
          "event_name": {"type": "string"},
          "description": {"type": "string"},
          "start_datetime": {"type": "string", "format": "date-time"},
          "end_datetime": {"type": "string", "format": "date-time"},
          "location": {"type": "string"},
          "event_type": {"type": "string"},
          "participant_limit": {"type": "integer"},
          "category": {"type": "string"},
          "tags": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "name": {"type": "string"}
        }
      },
      "CategoryInput": {
        "type": "object",
        "properties": {
          "name": {"type": "string"}
        },
        "required": ["name"]
      },
      "CategoryUpdate": {
        "type": "object",
        "properties": {
          "name": {"type": "string"}
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "name": {"type": "string"}
        }
      },
      "TagInput": {
        "type": "object",
        "properties": {
          "name": {"type": "string"}
        },
        "required": ["name"]
      },
      "TagUpdate": {
        "type": "object",
        "properties": {
          "name": {"type": "string"}
        }
      },
      "EventParticipant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "event_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "registration_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventWaitlist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "event_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "registration_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}